plugins {
  id("org.gradle.toolchains.foojay-resolver-convention") version "0.8.0"
}
/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 * For more detailed information on multi-project builds, please refer to https://docs.gradle.org/8.8/userguide/multi_project_builds.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

val protobufVersion = extra["versions.protobuf"]
val grpcVersion = extra["versions.grpc"]
val ktorVersion = extra["versions.ktor"]

rootProject.name = "NanoERP"
include("server")
include("desktop-client")
include("grpc")

dependencyResolutionManagement {
  versionCatalogs {
    create("libs") {
      library("protobuf.kotlin","com.google.protobuf:protobuf-kotlin:$protobufVersion")
      library("grpc.protobuf", "io.grpc:grpc-protobuf:$grpcVersion")
      library("protoc", "com.google.protobuf:protoc:$protobufVersion")
      library("grpc.gen.java", "io.grpc:protoc-gen-grpc-java:$grpcVersion")
      library("grpc.stubs.kotlin", "io.grpc:grpc-kotlin-stub:${extra["versions.protobuf.kotlin"]}")
      library("grpc.server.netty", "io.grpc:grpc-netty:$grpcVersion")
      library("grpc.netty.shaded", "io.grpc:grpc-netty-shaded:$grpcVersion")
      library("grpc.server.servlet", "io.grpc:grpc-servlet-jakarta:$grpcVersion")

      // KTOR
      library("ktor.server.core", "io.ktor:ktor-server-core:$ktorVersion")
      library("ktor.server.netty", "io.ktor:ktor-server-netty:$ktorVersion")
    }
  }
}

include("accounting:accounting-jfxclient")
findProject(":accounting:accounting-jfxclient")?.name = "accounting-jfxclient"
include("accounting:accounting-protobuf")
findProject(":accounting:accounting-protobuf")?.name = "accounting-protobuf"
include("accounting:accounting-server")
findProject(":accounting:accounting-server")?.name = "accounting-server"
include("accounting:accounting-runtime")
findProject(":accounting:accounting-runtime")?.name = "accounting-runtime"
